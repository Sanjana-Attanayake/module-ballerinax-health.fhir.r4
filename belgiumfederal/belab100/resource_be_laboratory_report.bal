// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.


import ballerina/constraint;
import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_BELABORATORYREPORT = "https://www.ehealth.fgov.be/standards/fhir/lab/StructureDefinition/be-laboratory-report";
public const RESOURCE_NAME_BELABORATORYREPORT = "DiagnosticReport";

# FHIR BeLaboratoryReport resource record.
#
# + resourceType - The type of the resource describes
# + extension - An Extension
# + code - A code or name that describes this diagnostic report.
# + subject - The subject of the report. Usually, but not always, this is a patient. However, diagnostic services also perform analyses on specimens collected from a variety of other sources.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + presentedForm - Rich text representation of the entire result as issued by the diagnostic service. Multiple formats are allowed but they SHALL be semantically equivalent.
# + language - The base language in which the resource is written.
# + media - A list of key images associated with this report. The images are generally created during the diagnostic process, and may be directly of the patient, or of treated specimens (i.e. slides of interest).
# + conclusion - Concise and clinically contextualized summary conclusion (interpretation/impression) of the diagnostic report.
# + result - [Observations](http://hl7.org/fhir/R4/observation.html) that are part of this diagnostic report.
# + specimen - Details about the specimens on which this diagnostic report is based.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + issued - The date and time that this version of the report was made available to providers, typically after the report was reviewed and verified.
# + basedOn - Details concerning the prescription this laboratory report fullfills. A reference to a ServiceRequest SHALL be given here that includes the time of prescription in its .authoredOn element. It is RECOMMENDED to also use the .identifier element of the ServiceRequest to identify the original order number. Note, within the Observation resource it is possible to define they were defined on a different serviceRequest (e.g. to clarify it was a sub ordering)
# + identifier - An identifier for this laboratory report. This identifier will be used to determine if a new resource is needed, or if this resource is an update of an existing one. When an identifier is given, a consumer SHALL NOT ignore it.
    # * identifier Slicings
        # 1) BeLaboratoryReportIdentifierDRID: Business identifier for report
        #       - min = 1
        #       - max = 1
        #
# + performer - The diagnostic service that is responsible for issuing the report. In the laboratory report, this is typically an organization (i.e. the laboratory) Note the Observation MAY have a different performer.
# + effectivePeriod - The time or time-period the observed values are related to. This is the time specimen collection(s)
# + resultsInterpreter - The practitioner or organization that is responsible for the report's conclusions and interpretations.
# + conclusionCode - One or more codes that represent the summary conclusion (interpretation/impression) of the diagnostic report.
# + encounter - The healthcare event (e.g. a patient and healthcare provider interaction) which this DiagnosticReport is about.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + effectiveDateTime - The time or time-period the observed values are related to. This is the time specimen collection(s)
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + category - The subject of this specialty, expressed in a LOINC code. The choice of what observations to categorize under what specialty are left ultimately to the discretion of the laboratory sending the results. Some non-restrictive guidelines: *18721-1 (THERAPEUTIC DRUG MONITORING STUDIES) will be used for a section carrying pharmacologyobservations on a patient. *Mycology and parasitology, as well as bacteriology, are part of the 18725-2 (MICROBIOLOGY STUDIES) specialty. *665 Virology MAY be included in 18725-2 (MICROBIOLOGY STUDIES) specialty or 18727-8 (SEROLOGY STUDIES)or split between both specialties, depending upon the Content Creator Actorâ€™s choice
# + imagingStudy - One or more links to full details of any imaging performed during the diagnostic investigation. Typically, this is imaging performed by DICOM enabled modalities, but this is not required. A fully enabled PACS viewer can use this information to provide views of the source images.
# + status - The status of the diagnostic report. Consult the HL7 list of allowed values here. Note when a report should actually replace a previous one, use the Replaces extension.

@r4:ResourceDefinition {
    resourceType: "DiagnosticReport",
    baseType: r4:DomainResource,
    profile: "https://www.ehealth.fgov.be/standards/fhir/lab/StructureDefinition/be-laboratory-report",
    elements: {
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.extension"
        },

        "code" : {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.code",
            valueSet: "http://hl7.org/fhir/ValueSet/report-codes"
        },

        "subject" : {
            name: "subject",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.subject"
        },

        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.modifierExtension"
        },

        "presentedForm" : {
            name: "presentedForm",
            dataType: r4:Attachment,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.presentedForm"
        },

        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },

        "media" : {
            name: "media",
            dataType: BeLaboratoryReportMedia,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.media"
        },

        "conclusion" : {
            name: "conclusion",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.conclusion"
        },

        "result" : {
            name: "result",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.result"
        },

        "specimen" : {
            name: "specimen",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.specimen"
        },

        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.id"
        },

        "text" : {
            name: "text",
            dataType: BeLaboratoryReportText,
            min: 0,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.text"
        },

        "issued" : {
            name: "issued",
            dataType: r4:instant,
            min: 1,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.issued"
        },

        "basedOn" : {
            name: "basedOn",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: true,
            path: "DiagnosticReport.basedOn"
        },

        "identifier" : {
            name: "identifier",
            dataType: r4:Identifier,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.identifier"
        },

        "performer" : {
            name: "performer",
            dataType: r4:Reference,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.performer"
        },

        "effectivePeriod" : {
            name: "effectivePeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.effective[x]"
        },

        "resultsInterpreter" : {
            name: "resultsInterpreter",
            dataType: r4:Reference,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.resultsInterpreter"
        },

        "conclusionCode" : {
            name: "conclusionCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.conclusionCode",
            valueSet: "http://hl7.org/fhir/ValueSet/clinical-findings"
        },

        "encounter" : {
            name: "encounter",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.encounter"
        },

        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.contained"
        },

        "effectiveDateTime" : {
            name: "effectiveDateTime",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.effective[x]"
        },

        "meta" : {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.meta"
        },

        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.implicitRules"
        },

        "category" : {
            name: "category",
            dataType: BeLaboratoryReportCategory,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.category",
            valueSet: "http://hl7.org/fhir/ValueSet/diagnostic-service-sections"
        },

        "imagingStudy" : {
            name: "imagingStudy",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DiagnosticReport.imagingStudy"
        },

        "status" : {
            name: "status",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            path: "DiagnosticReport.status",
            valueSet: "http://hl7.org/fhir/ValueSet/diagnostic-report-status|4.0.1"
        }

    },

    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}

public type BeLaboratoryReport record {|
    *r4:DomainResource;

    RESOURCE_NAME_BELABORATORYREPORT resourceType = RESOURCE_NAME_BELABORATORYREPORT;

    r4:Extension [] extension?;
    r4:CodeableConcept code;
    r4:Reference subject;
    r4:Extension [] modifierExtension?;
    r4:Attachment [] presentedForm?;
    r4:code language?;
    BeLaboratoryReportMedia [] media?;
    string conclusion?;
    r4:Reference [] result?;
    r4:Reference [] specimen?;
    string id?;
    BeLaboratoryReportText text?;
    r4:instant issued;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.DiagnosticReport.basedOn constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.DiagnosticReport.basedOn constraint. This field must be an array containing at most one item."
        }
    }
    r4:Reference [] basedOn;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.DiagnosticReport.identifier constraint. This field must be an array containing at least one item."
        }
    }
    r4:Identifier [] identifier;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.DiagnosticReport.performer constraint. This field must be an array containing at least one item."
        }
    }
    r4:Reference [] performer;
    r4:Period effectivePeriod?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.DiagnosticReport.resultsInterpreter constraint. This field must be an array containing at least one item."
        }
    }
    r4:Reference [] resultsInterpreter;
    r4:CodeableConcept [] conclusionCode?;
    r4:Reference encounter?;
    r4:Resource [] contained?;
    r4:dateTime effectiveDateTime?;
    r4:Meta meta?;
    r4:uri implicitRules?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.DiagnosticReport.category constraint. This field must be an array containing at least one item."
        }
    }
    BeLaboratoryReportCategory [] category;
    r4:Reference [] imagingStudy?;
    r4:code status;
    r4:Element ...;
|};

# FHIR BeLaboratoryReportCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.

@r4:DataTypeDefinition {
    name: "BeLaboratoryReportCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: r4:Coding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "DiagnosticReport.category.coding"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "DiagnosticReport.category.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "DiagnosticReport.category.id"
        },

        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "DiagnosticReport.category.text"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeLaboratoryReportCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.DiagnosticReport.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.DiagnosticReport.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    r4:Coding [] coding;
    r4:Extension [] extension?;
    string id?;
    string text?;
|};


# BeLaboratoryReportTextStatus enum
public enum BeLaboratoryReportTextStatus {
    CODE_STATUS_EXTENSIONS = "extensions",
    CODE_STATUS_GENERATED = "generated",
    CODE_STATUS_ADDITIONAL = "additional",
    CODE_STATUS_EMPTY = "empty"
}

# FHIR BeLaboratoryReportCategoryCodingLABREPORT datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.

@r4:DataTypeDefinition {
    name: "BeLaboratoryReportCategoryCodingLABREPORT",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "DiagnosticReport.category.coding.extension"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "DiagnosticReport.category.coding.code"
        },

        "system": {
            name: "system",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "DiagnosticReport.category.coding.system"
        },

        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "DiagnosticReport.category.coding.userSelected"
        },

        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "DiagnosticReport.category.coding.display"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "DiagnosticReport.category.coding.id"
        },

        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "DiagnosticReport.category.coding.version"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeLaboratoryReportCategoryCodingLABREPORT record {|
    *r4:Coding;

    r4:Extension [] extension?;
    r4:code code = "LAB";
    r4:uri system = "http://terminology.hl7.org/CodeSystem/v2-0074";
    boolean userSelected?;
    string display = "Laboratory";
    string id?;
    string 'version?;
|};


# BeLaboratoryReportIdentifierUse enum
public enum BeLaboratoryReportIdentifierUse {
    CODE_USE_SECONDARY = "secondary",
    CODE_USE_TEMP = "temp",
    CODE_USE_USUAL = "usual",
    CODE_USE_OLD = "old",
    CODE_USE_OFFICIAL = "official"
}

# FHIR BeLaboratoryReportIdentifierDRID datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period during which identifier is/was valid for use.
# + system - Establishes the namespace for the value - that is, a URL that describes a set values that are unique.
# + use - The purpose of this identifier.
# + assigner - Organization that issued/manages the identifier.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
# + value - The portion of the identifier typically relevant to the user and which is unique within the context of the system.

@r4:DataTypeDefinition {
    name: "BeLaboratoryReportIdentifierDRID",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "DiagnosticReport.identifier.extension"
        },

        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "DiagnosticReport.identifier.period"
        },

        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "DiagnosticReport.identifier.system"
        },

        "use": {
            name: "use",
            dataType: BeLaboratoryReportIdentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "DiagnosticReport.identifier.use"
        },

        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "DiagnosticReport.identifier.assigner"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "DiagnosticReport.identifier.id"
        },

        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "DiagnosticReport.identifier.type"
        },

        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "DiagnosticReport.identifier.value"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeLaboratoryReportIdentifierDRID record {|
    *r4:Identifier;

    r4:Extension [] extension?;
    r4:Period period?;
    r4:uri system = "https://www.ehealth.fgov.be/lab-report/diagnostic-report-id";
    BeLaboratoryReportIdentifierUse use?;
    r4:Reference assigner?;
    string id?;
    r4:CodeableConcept 'type?;
    string value;
|};


# FHIR BeLaboratoryReportText datatype record.
#
# + div - The actual narrative content, a stripped down version of XHTML.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + status - The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.

@r4:DataTypeDefinition {
    name: "BeLaboratoryReportText",
    baseType: (),
    elements: {
        "div": {
            name: "div",
            dataType: r4:xhtml,
            min: 1,
            max: 1,
            isArray: false,
            description: "The actual narrative content, a stripped down version of XHTML.",
            path: "DiagnosticReport.text.div"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "DiagnosticReport.text.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "DiagnosticReport.text.id"
        },

        "status": {
            name: "status",
            dataType: BeLaboratoryReportTextStatus,
            min: 1,
            max: 1,
            isArray: false,
            description: "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
            path: "DiagnosticReport.text.status"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeLaboratoryReportText record {|
    *r4:Narrative;

    r4:xhtml div;
    r4:Extension [] extension?;
    string id?;
    BeLaboratoryReportTextStatus status;
|};


# FHIR BeLaboratoryReportMedia datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + link - Reference to the image source.
# + comment - A comment about the image. Typically, this is used to provide an explanation for why the image is included, or to draw the viewer's attention to important features.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.

@r4:DataTypeDefinition {
    name: "BeLaboratoryReportMedia",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "DiagnosticReport.media.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "DiagnosticReport.media.modifierExtension"
        },

        "link": {
            name: "link",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Reference to the image source.",
            path: "DiagnosticReport.media.link"
        },

        "comment": {
            name: "comment",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A comment about the image. Typically, this is used to provide an explanation for why the image is included, or to draw the viewer's attention to important features.",
            path: "DiagnosticReport.media.comment"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "DiagnosticReport.media.id"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeLaboratoryReportMedia record {|
    *r4:BackboneElement;

    r4:Extension [] extension?;
    r4:Extension [] modifierExtension?;
    r4:Reference link;
    string comment?;
    string id?;
|};


