// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_VERIFICATIONRESULT = "http://hl7.org/fhir/StructureDefinition/VerificationResult";
public const RESOURCE_NAME_VERIFICATIONRESULT = "VerificationResult";

# FHIR VerificationResult resource record.
#
# + resourceType - The type of the resource describes
# + statusDate - When the validation status was updated.
# + nextScheduled - The date when target is next validated, if appropriate.
# + primarySource - Information about the primary source(s) involved in validation.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + attestation - Information about the entity attesting to information.
# + failureAction - The result if validation fails (fatal; warning; record only; none).
# + need - The frequency with which the target must be validated (none; initial; periodic).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + validationType - What the target is validated against (nothing; primary source; multiple sources).
# + validator - Information about the entity validating information.
# + language - The base language in which the resource is written.
# + targetLocation - The fhirpath location(s) within the resource that was validated.
# + frequency - Frequency of revalidation.
# + target - A resource that was validated.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + lastPerformed - The date/time validation was last completed (including failed validations).
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + validationProcess - The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context).
# + status - The validation status of the target (attested; validated; in process; requires revalidation; validation failed; revalidation failed).
@r4:ResourceDefinition {
    resourceType: "VerificationResult",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/VerificationResult",
    elements: {
        "statusDate" : {
            name: "statusDate",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.statusDate"
        },
        "nextScheduled" : {
            name: "nextScheduled",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.nextScheduled"
        },
        "primarySource" : {
            name: "primarySource",
            dataType: VerificationResultPrimarySource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VerificationResult.primarySource"
        },
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VerificationResult.extension"
        },
        "attestation" : {
            name: "attestation",
            dataType: VerificationResultAttestation,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.attestation"
        },
        "failureAction" : {
            name: "failureAction",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.failureAction",
            valueSet: "http://hl7.org/fhir/ValueSet/verificationresult-failure-action"
        },
        "need" : {
            name: "need",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.need",
            valueSet: "http://hl7.org/fhir/ValueSet/verificationresult-need"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VerificationResult.modifierExtension"
        },
        "validationType" : {
            name: "validationType",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.validationType",
            valueSet: "http://hl7.org/fhir/ValueSet/verificationresult-validation-type"
        },
        "validator" : {
            name: "validator",
            dataType: VerificationResultValidator,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VerificationResult.validator"
        },
        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "targetLocation" : {
            name: "targetLocation",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VerificationResult.targetLocation"
        },
        "frequency" : {
            name: "frequency",
            dataType: r4:Timing,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.frequency"
        },
        "target" : {
            name: "target",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VerificationResult.target"
        },
        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VerificationResult.contained"
        },
        "lastPerformed" : {
            name: "lastPerformed",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.lastPerformed"
        },
        "meta" : {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.implicitRules"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.id"
        },
        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "VerificationResult.text"
        },
        "validationProcess" : {
            name: "validationProcess",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VerificationResult.validationProcess",
            valueSet: "http://hl7.org/fhir/ValueSet/verificationresult-validation-process"
        },
        "status" : {
            name: "status",
            dataType: VerificationResultStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "VerificationResult.status",
            valueSet: "http://hl7.org/fhir/ValueSet/verificationresult-status|4.0.1"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type VerificationResult record {|
    *r4:DomainResource;

    RESOURCE_NAME_VERIFICATIONRESULT resourceType = RESOURCE_NAME_VERIFICATIONRESULT;

    r4:dateTime statusDate?;
    r4:date nextScheduled?;
    VerificationResultPrimarySource[] primarySource?;
    r4:Extension[] extension?;
    VerificationResultAttestation attestation?;
    r4:CodeableConcept failureAction?;
    r4:CodeableConcept need?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept validationType?;
    VerificationResultValidator[] validator?;
    r4:code language?;
    string[] targetLocation?;
    r4:Timing frequency?;
    r4:Reference[] target?;
    r4:Resource[] contained?;
    r4:dateTime lastPerformed?;
    r4:Meta meta?;
    r4:uri implicitRules?;
    string id?;
    r4:Narrative text?;
    r4:CodeableConcept[] validationProcess?;
    VerificationResultStatus status;
    r4:Element ...;
|};

# VerificationResultStatus enum
public enum VerificationResultStatus {
   CODE_STATUS_VALIDATED = "validated",
   CODE_STATUS_VAL_FAIL = "val-fail",
   CODE_STATUS_ATTESTED = "attested",
   CODE_STATUS_REQ_REVALID = "req-revalid",
   CODE_STATUS_REVAL_FAIL = "reval-fail",
   CODE_STATUS_IN_PROCESS = "in-process"
}

# FHIR VerificationResultAttestation datatype record.
#
# + date - The date the information was attested to.
# + sourceIdentityCertificate - A digital identity certificate associated with the attestation source.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + proxyIdentityCertificate - A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source.
# + communicationMethod - The method by which attested information was submitted/retrieved (manual; API; Push).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + onBehalfOf - When the who is asserting on behalf of another (organization or individual).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + proxySignature - Signed assertion by the proxy entity indicating that they have the right to submit attested information on behalf of the attestation source.
# + sourceSignature - Signed assertion by the attestation source that they have attested to the information.
# + who - The individual or organization attesting to information.
@r4:DataTypeDefinition {
    name: "VerificationResultAttestation",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date the information was attested to.",
            path: "VerificationResult.attestation.date"
        },
        "sourceIdentityCertificate": {
            name: "sourceIdentityCertificate",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A digital identity certificate associated with the attestation source.",
            path: "VerificationResult.attestation.sourceIdentityCertificate"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "VerificationResult.attestation.extension"
        },
        "proxyIdentityCertificate": {
            name: "proxyIdentityCertificate",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source.",
            path: "VerificationResult.attestation.proxyIdentityCertificate"
        },
        "communicationMethod": {
            name: "communicationMethod",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The method by which attested information was submitted/retrieved (manual; API; Push).",
            path: "VerificationResult.attestation.communicationMethod"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "VerificationResult.attestation.modifierExtension"
        },
        "onBehalfOf": {
            name: "onBehalfOf",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the who is asserting on behalf of another (organization or individual).",
            path: "VerificationResult.attestation.onBehalfOf"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "VerificationResult.attestation.id"
        },
        "proxySignature": {
            name: "proxySignature",
            dataType: r4:Signature,
            min: 0,
            max: 1,
            isArray: false,
            description: "Signed assertion by the proxy entity indicating that they have the right to submit attested information on behalf of the attestation source.",
            path: "VerificationResult.attestation.proxySignature"
        },
        "sourceSignature": {
            name: "sourceSignature",
            dataType: r4:Signature,
            min: 0,
            max: 1,
            isArray: false,
            description: "Signed assertion by the attestation source that they have attested to the information.",
            path: "VerificationResult.attestation.sourceSignature"
        },
        "who": {
            name: "who",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The individual or organization attesting to information.",
            path: "VerificationResult.attestation.who"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type VerificationResultAttestation record {|
    *r4:BackboneElement;

    r4:date date?;
    string sourceIdentityCertificate?;
    r4:Extension[] extension?;
    string proxyIdentityCertificate?;
    r4:CodeableConcept communicationMethod?;
    r4:Extension[] modifierExtension?;
    r4:Reference onBehalfOf?;
    string id?;
    r4:Signature proxySignature?;
    r4:Signature sourceSignature?;
    r4:Reference who?;
|};

# FHIR VerificationResultPrimarySource datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + pushTypeAvailable - Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source).
# + communicationMethod - Method for communicating with the primary source (manual; API; Push).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + validationDate - When the target was validated against the primary source.
# + 'type - Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source).
# + validationStatus - Status of the validation of the target against the primary source (successful; failed; unknown).
# + canPushUpdates - Ability of the primary source to push updates/alerts (yes; no; undetermined).
# + who - Reference to the primary source.
@r4:DataTypeDefinition {
    name: "VerificationResultPrimarySource",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "VerificationResult.primarySource.extension"
        },
        "pushTypeAvailable": {
            name: "pushTypeAvailable",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source).",
            path: "VerificationResult.primarySource.pushTypeAvailable"
        },
        "communicationMethod": {
            name: "communicationMethod",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Method for communicating with the primary source (manual; API; Push).",
            path: "VerificationResult.primarySource.communicationMethod"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "VerificationResult.primarySource.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "VerificationResult.primarySource.id"
        },
        "validationDate": {
            name: "validationDate",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the target was validated against the primary source.",
            path: "VerificationResult.primarySource.validationDate"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source).",
            path: "VerificationResult.primarySource.type"
        },
        "validationStatus": {
            name: "validationStatus",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Status of the validation of the target against the primary source (successful; failed; unknown).",
            path: "VerificationResult.primarySource.validationStatus"
        },
        "canPushUpdates": {
            name: "canPushUpdates",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ability of the primary source to push updates/alerts (yes; no; undetermined).",
            path: "VerificationResult.primarySource.canPushUpdates"
        },
        "who": {
            name: "who",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference to the primary source.",
            path: "VerificationResult.primarySource.who"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type VerificationResultPrimarySource record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:CodeableConcept[] pushTypeAvailable?;
    r4:CodeableConcept[] communicationMethod?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:dateTime validationDate?;
    r4:CodeableConcept[] 'type?;
    r4:CodeableConcept validationStatus?;
    r4:CodeableConcept canPushUpdates?;
    r4:Reference who?;
|};

# FHIR VerificationResultValidator datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + organization - Reference to the organization validating information.
# + identityCertificate - A digital identity certificate associated with the validator.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + attestationSignature - Signed assertion by the validator that they have validated the information.
@r4:DataTypeDefinition {
    name: "VerificationResultValidator",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "VerificationResult.validator.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "VerificationResult.validator.modifierExtension"
        },
        "organization": {
            name: "organization",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Reference to the organization validating information.",
            path: "VerificationResult.validator.organization"
        },
        "identityCertificate": {
            name: "identityCertificate",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A digital identity certificate associated with the validator.",
            path: "VerificationResult.validator.identityCertificate"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "VerificationResult.validator.id"
        },
        "attestationSignature": {
            name: "attestationSignature",
            dataType: r4:Signature,
            min: 0,
            max: 1,
            isArray: false,
            description: "Signed assertion by the validator that they have validated the information.",
            path: "VerificationResult.validator.attestationSignature"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type VerificationResultValidator record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:Reference organization;
    string identityCertificate?;
    string id?;
    r4:Signature attestationSignature?;
|};

