// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.


import ballerina/constraint;
import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_BEMYCARENETEAGREEMENTSERVICEREQUEST = "https://www.ehealth.fgov.be/standards/fhir/mycarenet/StructureDefinition/be-eagreementservicerequest";
public const RESOURCE_NAME_BEMYCARENETEAGREEMENTSERVICEREQUEST = "ServiceRequest";

# FHIR BeMyCareNetEagreementServiceRequest resource record.
#
# + resourceType - The type of the resource describes
# + insurance - Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service.
# + note - Any other notes and comments made about the service request. For example, internal billing notes.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code that identifies a particular service (i.e., procedure, diagnostic investigation, or panel of investigations) that have been requested.
# + requisition - A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier.
# + subject - On whom or what the service is to be performed. This is usually a human patient, but can also be requested on animals, groups of humans or animals, devices such as dialysis machines, or even locations (typically for environmental scans).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + reasonReference - Indicates another resource that provides a justification for why this service is being requested. May relate to the resources referred to in `supportingInfo`.
# + language - The base language in which the resource is written.
# + instantiatesUri - The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest.
# + relevantHistory - Key events in the history of the request.
# + supportingInfo - Additional clinical information about the patient or specimen that may influence the services or their interpretations. This information includes diagnosis, clinical findings and other observations. In laboratory ordering these are typically referred to as 'ask at order entry questions (AOEs)'. This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example, reporting the amount of inspired oxygen for blood gas measurements.
# + specimen - One or more specimens that the laboratory procedure will use.
# + quantityQuantity - An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).
# + asNeededBoolean - If a CodeableConcept is present, it indicates the pre-condition for performing the service. For example 'pain', 'on flare-up', etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + locationReference - A reference to the the preferred location(s) where the procedure should actually happen. E.g. at home or nursing day care center.
# + reasonCode - An explanation or justification for why this service is being requested in coded or textual form. This is often for billing purposes. May relate to the resources referred to in `supportingInfo`.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + doNotPerform - Set this to true if the record is saying that the service/procedure should NOT be performed.
# + basedOn - Plan/proposal/order fulfilled by this request.
# + asNeededCodeableConcept - If a CodeableConcept is present, it indicates the pre-condition for performing the service. For example 'pain', 'on flare-up', etc.
# + requester - The individual who initiated the request and has responsibility for its activation.
# + identifier - Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller.
# + authoredOn - When the request transitioned to being actionable.
# + performer - The desired performer for doing the requested service. For example, the surgeon, dermatopathologist, endoscopist, etc.
# + replaces - The request takes the place of the referenced completed or terminated request(s).
# + encounter - An encounter that provides additional information about the healthcare context in which this request is made.
# + occurrenceTiming - The date/time at which the requested service should occur.
# + instantiatesCanonical - The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest.
# + priority - Indicates how quickly the ServiceRequest should be addressed with respect to other requests.
# + intent - Whether the request is a proposal, plan, an original order or a reflex order.
# + performerType - Desired type of performer for doing the requested service.
# + bodySite - Anatomic location where the procedure should be performed. This is the target site.
# + contained - A resource that represents the data of a single raw artifact as digital content accessible in its native format. A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.
# + occurrencePeriod - The date/time at which the requested service should occur.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + occurrenceDateTime - The date/time at which the requested service should occur.
# + orderDetail - Additional details and instructions about the how the services are to be delivered. For example, and order for a urinary catheter may have an order detail for an external or indwelling catheter, or an order for a bandage may require additional instructions specifying how the bandage should be applied.
# + category - A code that classifies the service for searching, sorting and display purposes (e.g. 'Surgical Procedure').
# + locationCode - The preferred location(s) where the procedure should actually happen in coded or free text form. E.g. at home or nursing day care center.
# + patientInstruction - Instructions in terms that are understood by the patient or consumer.
# + status - The status of the order.

@r4:ResourceDefinition {
    resourceType: "ServiceRequest",
    baseType: r4:DomainResource,
    profile: "https://www.ehealth.fgov.be/standards/fhir/mycarenet/StructureDefinition/be-eagreementservicerequest",
    elements: {
        "insurance" : {
            name: "insurance",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.insurance"
        },

        "note" : {
            name: "note",
            dataType: r4:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.note"
        },

        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.extension"
        },

        "code" : {
            name: "code",
            dataType: BeMyCareNetEagreementServiceRequestCode,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.code",
            valueSet: "http://hl7.org/fhir/ValueSet/procedure-code"
        },

        "requisition" : {
            name: "requisition",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.requisition"
        },

        "subject" : {
            name: "subject",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ServiceRequest.subject"
        },

        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.modifierExtension"
        },

        "reasonReference" : {
            name: "reasonReference",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.reasonReference"
        },

        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },

        "instantiatesUri" : {
            name: "instantiatesUri",
            dataType: r4:uri,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.instantiatesUri"
        },

        "relevantHistory" : {
            name: "relevantHistory",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.relevantHistory"
        },

        "supportingInfo" : {
            name: "supportingInfo",
            dataType: BeMyCareNetEagreementServiceRequestSupportingInfo,
            min: 0,
            max: 1,
            isArray: true,
            path: "ServiceRequest.supportingInfo"
        },

        "specimen" : {
            name: "specimen",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.specimen"
        },

        "quantityQuantity" : {
            name: "quantityQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.quantity[x]"
        },

        "asNeededBoolean" : {
            name: "asNeededBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.asNeeded[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/medication-as-needed-reason"
        },

        "id" : {
            name: "id",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            path: "ServiceRequest.id"
        },

        "locationReference" : {
            name: "locationReference",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.locationReference"
        },

        "reasonCode" : {
            name: "reasonCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.reasonCode",
            valueSet: "http://hl7.org/fhir/ValueSet/procedure-reason"
        },

        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.text"
        },

        "doNotPerform" : {
            name: "doNotPerform",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.doNotPerform"
        },

        "basedOn" : {
            name: "basedOn",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.basedOn"
        },

        "asNeededCodeableConcept" : {
            name: "asNeededCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.asNeeded[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/medication-as-needed-reason"
        },

        "requester" : {
            name: "requester",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.requester"
        },

        "identifier" : {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.identifier"
        },

        "authoredOn" : {
            name: "authoredOn",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.authoredOn"
        },

        "performer" : {
            name: "performer",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.performer"
        },

        "replaces" : {
            name: "replaces",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.replaces"
        },

        "encounter" : {
            name: "encounter",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.encounter"
        },

        "occurrenceTiming" : {
            name: "occurrenceTiming",
            dataType: r4:Timing,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.occurrence[x]"
        },

        "instantiatesCanonical" : {
            name: "instantiatesCanonical",
            dataType: r4:canonical,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.instantiatesCanonical"
        },

        "priority" : {
            name: "priority",
            dataType: BeMyCareNetEagreementServiceRequestPriority,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.priority",
            valueSet: "http://hl7.org/fhir/ValueSet/request-priority|4.0.1"
        },

        "intent" : {
            name: "intent",
            dataType: BeMyCareNetEagreementServiceRequestIntent,
            min: 1,
            max: 1,
            isArray: false,
            path: "ServiceRequest.intent",
            valueSet: "http://hl7.org/fhir/ValueSet/request-intent|4.0.1"
        },

        "performerType" : {
            name: "performerType",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.performerType",
            valueSet: "http://hl7.org/fhir/ValueSet/participant-role"
        },

        "bodySite" : {
            name: "bodySite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.bodySite",
            valueSet: "http://hl7.org/fhir/ValueSet/body-site"
        },

        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: 1,
            isArray: true,
            path: "ServiceRequest.contained"
        },

        "occurrencePeriod" : {
            name: "occurrencePeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.occurrence[x]"
        },

        "meta" : {
            name: "meta",
            dataType: BeMyCareNetEagreementServiceRequestMeta,
            min: 1,
            max: 1,
            isArray: false,
            path: "ServiceRequest.meta"
        },

        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.implicitRules"
        },

        "occurrenceDateTime" : {
            name: "occurrenceDateTime",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.occurrence[x]"
        },

        "orderDetail" : {
            name: "orderDetail",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.orderDetail",
            valueSet: "http://hl7.org/fhir/ValueSet/servicerequest-orderdetail"
        },

        "category" : {
            name: "category",
            dataType: BeMyCareNetEagreementServiceRequestCategory,
            min: 0,
            max: 1,
            isArray: true,
            path: "ServiceRequest.category",
            valueSet: "http://hl7.org/fhir/ValueSet/servicerequest-category"
        },

        "locationCode" : {
            name: "locationCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ServiceRequest.locationCode",
            valueSet: "http://terminology.hl7.org/ValueSet/v3-ServiceDeliveryLocationRoleType"
        },

        "patientInstruction" : {
            name: "patientInstruction",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ServiceRequest.patientInstruction"
        },

        "status" : {
            name: "status",
            dataType: BeMyCareNetEagreementServiceRequestStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "ServiceRequest.status",
            valueSet: "http://hl7.org/fhir/ValueSet/request-status|4.0.1"
        }

    },

    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}

public type BeMyCareNetEagreementServiceRequest record {|
    *r4:DomainResource;

    RESOURCE_NAME_BEMYCARENETEAGREEMENTSERVICEREQUEST resourceType = RESOURCE_NAME_BEMYCARENETEAGREEMENTSERVICEREQUEST;

    r4:Reference [] insurance?;
    r4:Annotation [] note?;
    r4:Extension [] extension?;
    BeMyCareNetEagreementServiceRequestCode code?;
    r4:Identifier requisition?;
    r4:Reference subject;
    r4:Extension [] modifierExtension?;
    r4:Reference [] reasonReference?;
    r4:code language?;
    r4:uri [] instantiatesUri?;
    r4:Reference [] relevantHistory?;
    @constraint:Array {
        maxLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.supportingInfo constraint. This field must be an array containing at most one item."
        }
    }
    BeMyCareNetEagreementServiceRequestSupportingInfo [] supportingInfo?;
    r4:Reference [] specimen?;
    r4:Quantity quantityQuantity?;
    boolean asNeededBoolean?;
    string id;
    r4:Reference [] locationReference?;
    r4:CodeableConcept [] reasonCode?;
    r4:Narrative text?;
    boolean doNotPerform?;
    r4:Reference [] basedOn?;
    r4:CodeableConcept asNeededCodeableConcept?;
    r4:Reference requester?;
    r4:Identifier [] identifier?;
    r4:dateTime authoredOn?;
    r4:Reference [] performer?;
    r4:Reference [] replaces?;
    r4:Reference encounter?;
    r4:Timing occurrenceTiming?;
    r4:canonical [] instantiatesCanonical?;
    BeMyCareNetEagreementServiceRequestPriority priority?;
    BeMyCareNetEagreementServiceRequestIntent intent;
    r4:CodeableConcept performerType?;
    r4:CodeableConcept [] bodySite?;
    @constraint:Array {
        maxLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.contained constraint. This field must be an array containing at most one item."
        }
    }
    r4:Resource [] contained?;
    r4:Period occurrencePeriod?;
    BeMyCareNetEagreementServiceRequestMeta meta;
    r4:uri implicitRules?;
    r4:dateTime occurrenceDateTime?;
    r4:CodeableConcept [] orderDetail?;
    @constraint:Array {
        maxLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.category constraint. This field must be an array containing at most one item."
        }
    }
    BeMyCareNetEagreementServiceRequestCategory [] category?;
    r4:CodeableConcept [] locationCode?;
    string patientInstruction?;
    BeMyCareNetEagreementServiceRequestStatus status;
    r4:Element ...;
|};

# FHIR BeMyCareNetEagreementServiceRequestCode datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.

@r4:DataTypeDefinition {
    name: "BeMyCareNetEagreementServiceRequestCode",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: BeMyCareNetEagreementServiceRequestCodeCoding,
            min: 1,
            max: 1,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ServiceRequest.code.coding"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ServiceRequest.code.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ServiceRequest.code.id"
        },

        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "ServiceRequest.code.text"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeMyCareNetEagreementServiceRequestCode record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.code.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.code.coding constraint. This field must be an array containing at most one item."
        }
    }
    BeMyCareNetEagreementServiceRequestCodeCoding [] coding;
    r4:Extension [] extension?;
    string id?;
    string text?;
|};


# FHIR BeMyCareNetEagreementServiceRequestCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.

@r4:DataTypeDefinition {
    name: "BeMyCareNetEagreementServiceRequestCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: BeMyCareNetEagreementServiceRequestCategoryCoding,
            min: 1,
            max: 1,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ServiceRequest.category.coding"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ServiceRequest.category.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ServiceRequest.category.id"
        },

        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "ServiceRequest.category.text"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeMyCareNetEagreementServiceRequestCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    BeMyCareNetEagreementServiceRequestCategoryCoding [] coding;
    r4:Extension [] extension?;
    string id?;
    string text?;
|};


# FHIR BeMyCareNetEagreementServiceRequestCodeCoding datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.

@r4:DataTypeDefinition {
    name: "BeMyCareNetEagreementServiceRequestCodeCoding",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ServiceRequest.code.coding.extension"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ServiceRequest.code.coding.code"
        },

        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ServiceRequest.code.coding.system"
        },

        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "ServiceRequest.code.coding.userSelected"
        },

        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "ServiceRequest.code.coding.display"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ServiceRequest.code.coding.id"
        },

        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "ServiceRequest.code.coding.version"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeMyCareNetEagreementServiceRequestCodeCoding record {|
    *r4:Coding;

    r4:Extension [] extension?;
    r4:code code;
    r4:uri system = "http://snomed.info/sct";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};


# FHIR BeMyCareNetEagreementServiceRequestSupportingInfo datatype record.
#
# + reference - A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.
# + identifier - An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + display - Plain text narrative that identifies the resource in addition to the resource reference.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).

@r4:DataTypeDefinition {
    name: "BeMyCareNetEagreementServiceRequestSupportingInfo",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "ServiceRequest.supportingInfo.reference"
        },

        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "ServiceRequest.supportingInfo.identifier"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ServiceRequest.supportingInfo.extension"
        },

        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "ServiceRequest.supportingInfo.display"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ServiceRequest.supportingInfo.id"
        },

        "type": {
            name: "type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "ServiceRequest.supportingInfo.type"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeMyCareNetEagreementServiceRequestSupportingInfo record {|
    *r4:Reference;

    string reference;
    r4:Identifier identifier?;
    r4:Extension [] extension?;
    string display?;
    string id?;
    r4:uri 'type?;
|};


# BeMyCareNetEagreementServiceRequestIntent enum
public enum BeMyCareNetEagreementServiceRequestIntent {
    CODE_INTENT_PROPOSAL = "proposal",
    CODE_INTENT_INSTANCE_ORDER = "instance-order",
    CODE_INTENT_FILLER_ORDER = "filler-order",
    CODE_INTENT_ORIGINAL_ORDER = "original-order",
    CODE_INTENT_REFLEX_ORDER = "reflex-order",
    CODE_INTENT_PLAN = "plan",
    CODE_INTENT_DIRECTIVE = "directive",
    CODE_INTENT_ORDER = "order",
    CODE_INTENT_OPTION = "option"
}

# FHIR BeMyCareNetEagreementServiceRequestMeta datatype record.
#
# + lastUpdated - When the resource last changed - e.g. when the version changed.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + security - Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.
# + versionId - The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.
# + profile - A list of profiles (references to [StructureDefinition](http://hl7.org/fhir/R4/structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](http://hl7.org/fhir/R4/structuredefinition-definitions.html#StructureDefinition.url).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'source - A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](http://hl7.org/fhir/R4/provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.
# + tag - Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.

@r4:DataTypeDefinition {
    name: "BeMyCareNetEagreementServiceRequestMeta",
    baseType: (),
    elements: {
        "lastUpdated": {
            name: "lastUpdated",
            dataType: r4:instant,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the resource last changed - e.g. when the version changed.",
            path: "ServiceRequest.meta.lastUpdated"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ServiceRequest.meta.extension"
        },

        "security": {
            name: "security",
            dataType: r4:Coding,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
            path: "ServiceRequest.meta.security"
        },

        "versionId": {
            name: "versionId",
            dataType: r4:id,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
            path: "ServiceRequest.meta.versionId"
        },

        "profile": {
            name: "profile",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: true,
            description: "A list of profiles (references to [StructureDefinition](http://hl7.org/fhir/R4/structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](http://hl7.org/fhir/R4/structuredefinition-definitions.html#StructureDefinition.url).",
            path: "ServiceRequest.meta.profile"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ServiceRequest.meta.id"
        },

        "source": {
            name: "source",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](http://hl7.org/fhir/R4/provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
            path: "ServiceRequest.meta.source"
        },

        "tag": {
            name: "tag",
            dataType: r4:Coding,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
            path: "ServiceRequest.meta.tag"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeMyCareNetEagreementServiceRequestMeta record {|
    *r4:Meta;

    r4:instant lastUpdated?;
    r4:Extension [] extension?;
    r4:Coding [] security?;
    r4:id versionId?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.meta.profile constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ServiceRequest.meta.profile constraint. This field must be an array containing at most one item."
        }
    }
    r4:canonical [] profile;
    string id?;
    r4:uri 'source?;
    r4:Coding [] tag?;
|};


# FHIR BeMyCareNetEagreementServiceRequestCategoryCoding datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.

@r4:DataTypeDefinition {
    name: "BeMyCareNetEagreementServiceRequestCategoryCoding",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ServiceRequest.category.coding.extension"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ServiceRequest.category.coding.code"
        },

        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ServiceRequest.category.coding.system"
        },

        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "ServiceRequest.category.coding.userSelected"
        },

        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "ServiceRequest.category.coding.display"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ServiceRequest.category.coding.id"
        },

        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "ServiceRequest.category.coding.version"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BeMyCareNetEagreementServiceRequestCategoryCoding record {|
    *r4:Coding;

    r4:Extension [] extension?;
    r4:code code;
    r4:uri system = "http://snomed.info/sct";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};


# BeMyCareNetEagreementServiceRequestStatus enum
public enum BeMyCareNetEagreementServiceRequestStatus {
    CODE_STATUS_DRAFT = "draft",
    CODE_STATUS_ACTIVE = "active",
    CODE_STATUS_COMPLETED = "completed",
    CODE_STATUS_REVOKED = "revoked",
    CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
    CODE_STATUS_ON_HOLD = "on-hold",
    CODE_STATUS_UNKNOWN = "unknown"
}

# BeMyCareNetEagreementServiceRequestPriority enum
public enum BeMyCareNetEagreementServiceRequestPriority {
    CODE_PRIORITY_STAT = "stat",
    CODE_PRIORITY_ROUTINE = "routine",
    CODE_PRIORITY_URGENT = "urgent",
    CODE_PRIORITY_ASAP = "asap"
}

